// Generated by gencpp from file client_server/mult.msg
// DO NOT EDIT!


#ifndef CLIENT_SERVER_MESSAGE_MULT_H
#define CLIENT_SERVER_MESSAGE_MULT_H

#include <ros/service_traits.h>


#include <client_server/multRequest.h>
#include <client_server/multResponse.h>


namespace client_server
{

struct mult
{

typedef multRequest Request;
typedef multResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct mult
} // namespace client_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::client_server::mult > {
  static const char* value()
  {
    return "a7d7d7065d45755acef7d4dcf908162a";
  }

  static const char* value(const ::client_server::mult&) { return value(); }
};

template<>
struct DataType< ::client_server::mult > {
  static const char* value()
  {
    return "client_server/mult";
  }

  static const char* value(const ::client_server::mult&) { return value(); }
};


// service_traits::MD5Sum< ::client_server::multRequest> should match
// service_traits::MD5Sum< ::client_server::mult >
template<>
struct MD5Sum< ::client_server::multRequest>
{
  static const char* value()
  {
    return MD5Sum< ::client_server::mult >::value();
  }
  static const char* value(const ::client_server::multRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::client_server::multRequest> should match
// service_traits::DataType< ::client_server::mult >
template<>
struct DataType< ::client_server::multRequest>
{
  static const char* value()
  {
    return DataType< ::client_server::mult >::value();
  }
  static const char* value(const ::client_server::multRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::client_server::multResponse> should match
// service_traits::MD5Sum< ::client_server::mult >
template<>
struct MD5Sum< ::client_server::multResponse>
{
  static const char* value()
  {
    return MD5Sum< ::client_server::mult >::value();
  }
  static const char* value(const ::client_server::multResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::client_server::multResponse> should match
// service_traits::DataType< ::client_server::mult >
template<>
struct DataType< ::client_server::multResponse>
{
  static const char* value()
  {
    return DataType< ::client_server::mult >::value();
  }
  static const char* value(const ::client_server::multResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CLIENT_SERVER_MESSAGE_MULT_H
